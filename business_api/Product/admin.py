from django.contrib import admin
from .models import *
from django.utils.html import format_html
from admin import BaseAdmin

@admin.register(Product)
class ProductAdmin(BaseAdmin):
    list_display = ('image_thumb', 'name', 'price_rub', 'stock_status', 'category_badge')
    list_filter = ('category', 'is_active')
    search_fields = ('name', 'sku')
    
    fieldsets = (
        ('üì¶ –û—Å–Ω–æ–≤–Ω–æ–µ', {
            'fields': ('name', 'category', 'price', 'is_active'),
            'description': '–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–æ–≤–∞—Ä–∞'
        }),
        ('‚öñÔ∏è –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏', {
            'fields': ('weight', 'by_weight', 'description')
        }),
        ('üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': ('image',)
        }),
    )

    def image_thumb(self, obj):
        return format_html('<img src="{}" height="50" />', obj.image) if obj.image else "-"
    image_thumb.short_description = "–§–æ—Ç–æ"

    def price_rub(self, obj):
        return f"{obj.price} ‚ÇΩ"
    price_rub.short_description = "–¶–µ–Ω–∞"

    def stock_status(self, obj):
        return "‚úÖ –í –Ω–∞–ª–∏—á–∏–∏" if obj.is_active else "‚õî –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
    stock_status.short_description = "–ù–∞–ª–∏—á–∏–µ"

    def category_badge(self, obj):
        return format_html(
            '<span style=" #f0f0f0; padding:2px 8px; border-radius:10px;">{}</span>',
            obj.category.name
        )
    category_badge.short_description = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è"

@admin.register(Category)
class CategoryAdmin(BaseAdmin):
    list_display = ('name', 'product_count', 'image_preview', 'status_badge')
    search_fields = ('name',)
    
    fieldsets = (
        ('üìÅ –û—Å–Ω–æ–≤–Ω–æ–µ', {
            'fields': ('name', 'is_active'),
            'description': '–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
        }),
        ('üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', {
            'fields': ('image',)
        }),
        ('üìù –û–ø–∏—Å–∞–Ω–∏–µ', {
            'fields': ('description',),
            'classes': ('collapse',)
        }),
    )

    def image_preview(self, obj):
        if obj.image:
            return format_html('<img src="{}" height="50" />', obj.image)
        return "-"
    image_preview.short_description = "–ü—Ä–µ–≤—å—é"

    def product_count(self, obj):
        return obj.product_set.count()
    product_count.short_description = "üì¶ –¢–æ–≤–∞—Ä–æ–≤"

    def status_badge(self, obj):
        return "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if obj.is_active else "‚õî –°–∫—Ä—ã—Ç–∞"
    status_badge.short_description = "–°—Ç–∞—Ç—É—Å"

@admin.register(Cart)
class CartAdmin(BaseAdmin):
    list_display = (
        'user_info', 
        'product_link', 
        'formatted_quantity', 
        'total_price', 
        'time_added',
        'status_badge'
    )
    list_filter = ('user', 'product')
    search_fields = ('user__phone_number', 'product__name')
    list_select_related = ('user', 'product')
    date_hierarchy = 'time_add'
    
    fieldsets = (
        ('üõí –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('user', 'product', 'quanity'),
            'description': '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        }),
        ('üïí –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏', {
            'fields': ('time_add',),
            'classes': ('collapse',)
        }),
    )

    def user_info(self, obj):
        return format_html(
            "{}<br>üìû {}",
            obj.user.get_full_name() or obj.user.username,
            obj.user.phone_number
        )
    user_info.short_description = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

    def product_link(self, obj):
        return format_html(
            '<a href="/admin/app/product/{}/change/">{}</a>',
            obj.product.id,
            obj.product.name
        )
    product_link.short_description = "–¢–æ–≤–∞—Ä"

    def formatted_quantity(self, obj):
        return f"{obj.quanity} {'–∫–≥' if obj.product.by_weight else '—à—Ç'}"
    formatted_quantity.short_description = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"

    def total_price(self, obj):
        return f"{obj.product.price * obj.quanity:.2f} ‚ÇΩ"
    total_price.short_description = "–°—É–º–º–∞"

    def time_added(self, obj):
        return obj.time_add.strftime("%d.%m.%Y %H:%M")
    time_added.short_description = "–î–æ–±–∞–≤–ª–µ–Ω–æ"

    def status_badge(self, obj):
        active_cart = obj.user.cart.filter(time_add__gte=obj.time_add).exists()
        return format_html(
            '<span style="color: {};">‚óè</span> {}',
            '#4CAF50' if active_cart else '#F44336',
            '–ê–∫—Ç–∏–≤–Ω–∞' if active_cart else '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'
        )
    status_badge.short_description = "–°—Ç–∞—Ç—É—Å"

    def get_queryset(self, request):
        return super().get_queryset(request).select_related(
            'user', 
            'product'
        ).prefetch_related('product__category')
    
    class Media:
        css = {
            'all': ('admin/css/cart.css',)
        }


@admin.register(Promotion)
class PromotionAdmin(BaseAdmin):
    list_display = ('name', 'product_link', 'discount_badge', 'status_icon')
    search_fields = ('name', 'product__name')
    
    fieldsets = (
        ('üéÅ –ê–∫—Ü–∏—è', {
            'fields': ('name', 'product', 'discount', 'on_start'),
            'description': '–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–∫—Ü–∏–∏'
        }),
        ('üìù –û–ø–∏—Å–∞–Ω–∏–µ', {
            'fields': ('description',),
            'classes': ('collapse',)
        }),
    )

    def product_link(self, obj):
        return format_html(
            '<a href="/admin/app/product/{}/change/">{}</a>',
            obj.product.id,
            obj.product.name
        )
    product_link.short_description = "–¢–æ–≤–∞—Ä"

    def discount_badge(self, obj):
        return format_html(
            '<span style=" #fff3e0; padding:2px 8px; border-radius:5px;">-{}%</span>',
            obj.discount
        )
    discount_badge.short_description = "–°–∫–∏–¥–∫–∞"

    def status_icon(self, obj):
        return "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if obj.on_start else "‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ"
    status_icon.short_description = "–°—Ç–∞—Ç—É—Å"

@admin.register(PersonalDiscount)
class PersonalDiscountAdmin(BaseAdmin):
    list_display = ('user_info', 'product_link', 'discount_badge', 'created_date')
    search_fields = ('user__phone_number', 'product__name')
    
    fieldsets = (
        ('üéÅ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', {
            'fields': ('user', 'product', 'discount'),
            'description': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞'
        }),
    )

    def user_info(self, obj):
        return format_html(
            "{}<br>üìû {}",
            obj.user.short_name(),
            obj.user.phone_number
        )
    user_info.short_description = "–ö–ª–∏–µ–Ω—Ç"

    def product_link(self, obj):
        return format_html(
            '<a href="/admin/app/product/{}/change/">{}</a>',
            obj.product.id,
            obj.product.name
        )
    product_link.short_description = "–¢–æ–≤–∞—Ä"

    def discount_badge(self, obj):
        return format_html(
            '<span style=" #f0f4c3; padding:2px 8px; border-radius:5px;">-{}%</span>',
            obj.discount
        )
    discount_badge.short_description = "–°–∫–∏–¥–∫–∞"

    def created_date(self, obj):
        return obj.created.strftime("%d.%m.%Y") if obj.created else "-"
    created_date.short_description = "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"

class PromocodeAdmin(BaseAdmin):
    list_display = ('code_badge', 'discount_percent', 'usage_count', 'active_status')
    list_editable = ('active_status',)
    search_fields = ('code',)
    
    fieldsets = (
        ('üéüÔ∏è –û—Å–Ω–æ–≤–Ω–æ–µ', {
            'fields': ('code', 'discount', 'is_active'),
            'description': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏'
        }),
    )

    def code_badge(self, obj):
        return format_html(
            '<span style=" #ffeb3b; padding:2px 8px; border-radius:5px;">{}</span>',
            obj.code
        )
    code_badge.short_description = "–ü—Ä–æ–º–æ–∫–æ–¥"

    def discount_percent(self, obj):
        return f"-{obj.discount}%"
    discount_percent.short_description = "–°–∫–∏–¥–∫–∞"

    def usage_count(self, obj):
        return obj.order_set.count()
    usage_count.short_description = "üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π"

    def active_status(self, obj):
        return "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if obj.is_active else "‚õî –ù–µ –∞–∫—Ç–∏–≤–µ–Ω"
    active_status.short_description = "–°—Ç–∞—Ç—É—Å"
    active_status.boolean = True

@admin.register(GroupPromotion)
class GroupPromotionAdmin(BaseAdmin):
    list_display = ('name', 'group_badge', 'discount_badge')
    search_fields = ('name', 'user_group__name')
    
    fieldsets = (
        ('üé™ –ê–∫—Ü–∏—è', {
            'fields': ('name', 'user_group', 'discount'),
            'description': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø–æ–≤–æ–π –∞–∫—Ü–∏–∏'
        }),
        ('üì¶ –¢–æ–≤–∞—Ä', {
            'fields': ('product',),
        }),
    )

    def group_badge(self, obj):
        return format_html(
            '<span style=" #e3f2fd; padding:2px 8px; border-radius:5px;">{}</span>',
            obj.user_group.name
        )
    group_badge.short_description = "–ì—Ä—É–ø–ø–∞"

    def discount_badge(self, obj):
        return format_html(
            '<span style=" #c8e6c9; padding:2px 8px; border-radius:5px;">-{}%</span>',
            obj.discount
        )
    discount_badge.short_description = "–°–∫–∏–¥–∫–∞"

class PromotionInline(admin.TabularInline):
    model = Promotion
    extra = 1

class PersonalDiscountInline(admin.TabularInline):
    model = PersonalDiscount
    extra = 1