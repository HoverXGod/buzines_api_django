# Generated by Django 5.1.4 on 2025-03-23 22:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Order', '0007_orderitem_promotion_name_and_more'),
        ('Payment', '0004_payment_chargeback_status_payment_currency_and_more'),
        ('Product', '0007_alter_cart_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerLifetimeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_spent', models.DecimalField(decimal_places=2, max_digits=12)),
                ('avg_order_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_frequency', models.FloatField()),
                ('category_spend', models.DecimalField(decimal_places=2, max_digits=12)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('preferred_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Product.category')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CohortAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cohort_date', models.DateField()),
                ('retention_day', models.PositiveIntegerField()),
                ('metrics', models.JSONField(default=dict, help_text="{\n        'total_users': 0,\n        'active_users': 0,\n        'revenue': 0.0,\n        'avg_order_value': 0.0\n    }")),
                ('primary_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Product.category')),
            ],
            options={
                'indexes': [models.Index(fields=['cohort_date', 'primary_category'], name='Analytics_c_cohort__eab28d_idx'), models.Index(fields=['retention_day'], name='Analytics_c_retenti_378f75_idx')],
                'unique_together': {('cohort_date', 'retention_day', 'primary_category')},
            },
        ),
        migrations.CreateModel(
            name='CustomerBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_metrics', models.JSONField(default=dict, help_text="{\n        'page_views': 0,\n        'time_spent': 0,\n        'cart_actions': 0\n    }")),
                ('preference_profile', models.JSONField(default=dict)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'last_activity'], name='Analytics_c_user_id_59e86e_idx'), models.Index(fields=['preference_profile'], name='Analytics_c_prefere_db7c99_idx')],
            },
        ),
        migrations.CreateModel(
            name='InventoryTurnover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('stock_turnover', models.FloatField()),
                ('stockout_days', models.PositiveIntegerField()),
                ('demand_forecast', models.PositiveIntegerField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.category')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.product')),
            ],
            options={
                'indexes': [models.Index(fields=['category', 'period_start'], name='Analytics_i_categor_60e019_idx')],
                'unique_together': {('product', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='OrderAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('margin', models.DecimalField(decimal_places=2, max_digits=12)),
                ('acquisition_source', models.CharField(max_length=100)),
                ('customer_journey', models.JSONField(default=dict)),
                ('predicted_churn_risk', models.FloatField(null=True)),
                ('item_metrics', models.JSONField(default=dict, help_text='\n    {\n        "top_items": [{"id": 1, "name": "Товар", "units": 5}],\n        "basket_diversity": 0.75  # Индекс разнообразия корзины\n    }\n    ')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Order.order')),
            ],
            options={
                'indexes': [models.Index(fields=['margin'], name='Analytics_o_margin_0894a5_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrderItemAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('margin', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profitability_index', models.FloatField()),
                ('cross_sell_products', models.ManyToManyField(to='Product.product')),
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Order.orderitem')),
            ],
            options={
                'indexes': [models.Index(fields=['margin'], name='Analytics_o_margin_c0b7ef_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateway_performance', models.FloatField(help_text='Время обработки в секундах')),
                ('fraud_indicators', models.JSONField(default=dict)),
                ('risk_score', models.FloatField(null=True)),
                ('chargeback_probability', models.FloatField(null=True)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Payment.payment')),
            ],
            options={
                'indexes': [models.Index(fields=['risk_score'], name='Analytics_p_risk_sc_1d55c8_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('metrics', models.JSONField(default=dict, help_text="{\n        'views': 0,\n        'cart_adds': 0,\n        'purchases': 0,\n        'conversion_rate': 0.0,\n        'stock_level': 0\n    }")),
                ('total_units_sold', models.PositiveIntegerField(default=0)),
                ('avg_selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_impact', models.DecimalField(decimal_places=2, max_digits=5)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.category')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.product')),
            ],
            options={
                'indexes': [models.Index(fields=['product', 'date'], name='Analytics_p_product_468687_idx'), models.Index(fields=['avg_selling_price'], name='Analytics_p_avg_sel_e435fc_idx')],
            },
        ),
        migrations.CreateModel(
            name='SalesFunnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('view', 'Просмотр'), ('cart', 'Корзина'), ('checkout', 'Оформление'), ('payment', 'Оплата'), ('delivery', 'Доставка')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session_data', models.JSONField(default=dict)),
                ('device_type', models.CharField(choices=[('mobile', 'Мобильный'), ('desktop', 'Десктоп'), ('tablet', 'Планшет')], max_length=20)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Product.category')),
                ('order_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Order.orderitem')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Product.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['stage', 'timestamp'], name='Analytics_s_stage_bf3de0_idx'), models.Index(fields=['user', 'product'], name='Analytics_s_user_id_bbdeee_idx')],
            },
        ),
    ]
